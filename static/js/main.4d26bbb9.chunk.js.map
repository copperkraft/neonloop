{"version":3,"sources":["components/Terrain.tsx","components/NeonScene.tsx","reportWebVitals.ts","data/levels/index.ts","data/levels/level1.ts","data/levels/level2.ts","data/levels/level3.ts","data/levels/level4.ts","data/levels/level5.ts","data/levels/level6.ts","data/levels/level7.ts","data/levels/level8.ts","components/Ball.tsx","components/Prism.tsx","utils/geometryMapping.ts","components/Wall.tsx","components/WallMap.tsx","utils/getSquareMap.ts","components/EventPlane.tsx","components/Pin.tsx","components/MagnetLink.tsx","utils/parseLevel.ts","utils/addLevelBorders.ts","components/Goal.tsx","components/Collectible.tsx","components/Level.tsx","data/levels/levelColors.ts","core/Game.tsx","App.tsx","index.tsx"],"names":["Terrain","terrain","useRef","visible","position","rotation","Math","PI","ref","attach","args","color","roughness","metalness","opacity","transparent","wireframe","onPerfEntry","NeonScene","children","colorScheme","left","right","top","intensity","luminanceThreshold","luminanceSmoothing","height","levels","Ball","ball","emissive","Color","emissiveIntensity","Prism","vertices","shape","useMemo","Shape","map","x","y","Vector2","steps","depth","bevelEnabled","geometryMapping","1000","1100","1010","1001","1011","1110","1101","1111","Wall","type","WallMap","wallMap","walls","newMap","length","newRow","push","getSquareMap","flatMap","row","EventPlane","size","width","onPointerDown","onPointerMove","onPointerUp","onPointerLeave","Pin","state","pin","MagnetLink","active","line","useFrame","from","current","to","direction","Vector3","subVectors","arrow","ArrowHelper","clone","normalize","set","add","divideScalar","toArray","scale","setFromQuaternion","quaternion","parseLevel","level","borderedLevel","split","join","addLevelBorders","start","collectibles","goal","offset","tileMap","forEach","levelCollectibles","Goal","clock","rotateX","setY","sin","elapsedTime","Collectible","Level","levelIndex","ballSpeed","tractionForce","advanceLevel","useState","linkActive","setLinkActive","setCollectibles","velocity","init","useCallback","useEffect","delta","ballPosition","pinPosition","addScaledVector","sub","angleTo","setLength","round","z","some","cx","cz","filter","movePin","event","point","activatePin","deactivatePin","collectible","levelColors","Game","useControls","value","min","max","step","onCreated","gl","setClearColor","Stats","PerspectiveCamera","makeDefault","MapControls","enabled","fallback","App","style","ReactDOM","render","StrictMode","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"6OAMO,SAASA,IACd,IAAMC,EAAUC,iBAAa,MAE7B,OACE,uBACEC,SAAO,EACPC,SAAU,CAAC,GARK,GAQa,GAC7BC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAC5BC,IAAKP,EAJP,UAME,qCAAqBQ,OAAO,WAAWC,KAAM,CAAC,IAAM,IAAM,IAAK,OAC/D,sCACED,OAAO,WACPE,MAAM,OACNC,UAAW,EACXC,UAAW,EACXC,QAAS,EACTC,aAAW,EACXC,WAAS,OChBV,ICNyBC,EDMnBC,EAAsC,SAAC,GAAD,IACjDC,EADiD,EACjDA,SADiD,gBAEjDC,YAFiD,GAEnCC,EAFmC,KAE7BC,EAF6B,KAEtBC,EAFsB,YAIjD,qCACE,cAACvB,EAAD,IACA,kCAAkBW,MAAOY,EAAKC,UAAW,EAAGpB,SAAU,CAAC,EAAG,GAAI,KAC9D,kCAAkBO,MAAOU,EAAMG,UAAW,EAAGpB,SAAU,CAAC,IAAK,EAAG,MAChE,kCAAkBO,MAAOW,EAAOE,UAAW,EAAGpB,SAAU,EAAE,IAAK,GAAI,MAClEe,EACD,cAAC,IAAD,UACE,cAAC,IAAD,CAAOK,UAAW,EAAGC,mBAAoB,GAAKC,mBAAoB,GAAKC,OAAQ,Y,eERxEC,EAAS,CCTW,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFCxC+B,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFCxC+B,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFCxC+B,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFCxC+B,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFCxC+B,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFCxC+B,CAC/B,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,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","file":"static/js/main.4d26bbb9.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nimport { Mesh } from 'three';\n\nconst GROUND_HEIGHT = -50;\n\nexport function Terrain() {\n  const terrain = useRef<Mesh>(null!);\n\n  return (\n    <mesh\n      visible\n      position={[0, GROUND_HEIGHT, 0]}\n      rotation={[-Math.PI / 2, 0, 0]}\n      ref={terrain}\n    >\n      <planeBufferGeometry attach=\"geometry\" args={[5000, 5000, 500, 500]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"blue\"\n        roughness={1}\n        metalness={0}\n        opacity={1}\n        transparent\n        wireframe\n      />\n    </mesh>\n  );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { Bloom, EffectComposer } from '@react-three/postprocessing';\nimport { Terrain } from './Terrain';\n\ninterface NeonSceneProps {\n  colorScheme: [string, string, string];\n}\n\nexport const NeonScene: React.FC<NeonSceneProps> = ({\n  children,\n  colorScheme: [left, right, top],\n}: PropsWithChildren<NeonSceneProps>) => (\n  <>\n    <Terrain />\n    <directionalLight color={top} intensity={1} position={[5, 3, -5]} />\n    <directionalLight color={left} intensity={4} position={[100, 0, 30]} />\n    <directionalLight color={right} intensity={3} position={[-100, 0, -30]} />\n    {children}\n    <EffectComposer>\n      <Bloom intensity={1} luminanceThreshold={0.1} luminanceSmoothing={0.3} height={500} />\n    </EffectComposer>\n  </>\n);\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import { level1 } from './level1';\nimport { level2 } from './level2';\nimport { level3 } from './level3';\nimport { level4 } from './level4';\nimport { level5 } from './level5';\nimport { level6 } from './level6';\nimport { level7 } from './level7';\nimport { level8 } from './level8';\n\nexport type { LevelData } from './levelData.type';\n\nexport const levels = [\n  level1,\n  level2,\n  level3,\n  level4,\n  level5,\n  level6,\n  level7,\n  level8,\n];\n","import { LevelData } from './levelData.type';\n\nexport const level1: LevelData = [\n  '                                             WWWWWWWWWWWWWWWWWWWWW              ',\n  '                                              WWWWWWWWWWWWWWWWWWWW              ',\n  '                                              WWWWWWWWWWWWWWWWWWWW              ',\n  '                                               WWWWWWWWWWWWWWWWWW               ',\n  '                   C                           WWWWWWWWWWWWWWWWWW               ',\n  '                                                WWWWWWWWWWWWWWWW                ',\n  '                                                 WWWWWWWWWWWWWWW                ',\n  '                                                 WWWWWWWWWWWWWW                 ',\n  '                                                 WWWWWWWWWWWWWW                 ',\n  '                                                  WWWWWWWWWWWWWW        G       ',\n  '                                                   WWWWWWWWWWWWW                ',\n  '                                                   WWWWWWWWWWWW                 ',\n  '                                                   WWWWWWWWWWWW                 ',\n  '                                                    WWWWWWWWWW                  ',\n  '                                              C      WWWWWWWW                   ',\n  '                                                      WWWWWWW                   ',\n  '                                                       WWWWW                    ',\n  '                                                        WWW                     ',\n  '                                                         WW                     ',\n  '                                           WWW                                  ',\n  '                                          WWWWWWW                               ',\n  '                                          WWWWWWWW                              ',\n  '                                          WWWWWWWW                              ',\n  '                                         WWWWWWWWWW                             ',\n  '                                         WWWWWWWWWWW                            ',\n  '                                         WWWWWWWWWWWWW                          ',\n  '     S                                   WWWWWWWWWWWWW                          ',\n  '                                         WWWWWWWWWWWWWW                         ',\n  '                                         WWWWWWWWWWWWWWW                        ',\n  '                                        WWWWWWWWWWWWWWWW                        ',\n  '                                       WWWWWWWWWWWWWWWWW                        ',\n  '                                       WWWWWWWWWWWWWWWWW        C               ',\n  '                                       WWWWWWWWWWWWWWWWW                        ',\n  '                                      WWWWWWWWWWWWWWWWWW                        ',\n  '                                      WWWWWWWWWWWWWWWWWW                        ',\n  '                                     WWWWWWWWWWWWWWWWWWW                        ',\n  '                                      WWWWWWWWWWWWWWWWW                         ',\n  '                                    WWWWWWWWWWWWWWWWWWW                         ',\n  '                                    WWWWWWWWWWWWWWWWWWWW                        ',\n  '                                   WWWWWWWWWWWWWWWWWWWWWW                       ',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level2: LevelData = [\n  '                WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  '                 WWWWW                       WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  '                  WWWW                               WWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  '                  WWWW     C                            WWWWWWWWWWWWWWWWWWWWWWWW',\n  '    S             WWWW                                   WWWWWWWWWWWWWWWWWWWWWWW',\n  '                 WWWWW                                    WWWWWWWWWWWWWWWWWWWWWW',\n  '                 WWWWWW                                   WWWWWWWWWWWWWWWWWWWWWW',\n  '                WWWWWWW                                   WWWWWWWWWWWWWWWWWWWWWW',\n  '                WWWWWWW                                    WWWWWWWWWWWWWWWWWWWWW',\n  '                  WWWW                                     WWWWWWWWWWWWWWWWW  WW',\n  '                                      WWWW                 WWWWWWWWWWWWWWWW    W',\n  '                                    WWWWWWWW                WWWWWWWWWWWWWW      ',\n  '                                  WWWWWWWWWWWW               WWWWWWWWWWW        ',\n  '                                  WWWWWWWWWWWW                WWWWWWW           ',\n  '                                  WWWWWWWWWWWWW                                 ',\n  '  WWWWWW                          WWWWWWWWWWWWW                                 ',\n  'WWWWWWWWW                         WWWWWWWWWWWWWW                                ',\n  'WWWWWWWWWW                        WWWWWWWWWWWWWW                         G      ',\n  'WWWWWWWWWWW                       WWWWWWWWWWWWWW                                ',\n  'WWWWWWWWWWWW                      WWWWWWWWWWWWWW                               W',\n  'WWWWWWWWWWWWW                     WWWWWWWWWWWWWW                               W',\n  'WWWWWWWWWWWWW                      WWWWWWWWWWWWW                               W',\n  'WWWWWWWWWWWWW                      WWWWWWWWWWWWW                              WW',\n  'WWWWWWWWWWWWW                      WWWWWWWWWWWWW                              WW',\n  'WWWWWWWWWWWWW                      WWWWWWWWWWWW                              WWW',\n  'WWWWWWWWWWWWW                       WWWWWWWWWW                               WWW',\n  'WWWWWWWWWWWWW                       WWWWWWWWWW                              WWWW',\n  'WWWWWWWWWWWWW                      WWWWWWWWWW                              WWWWW',\n  'WWWWWWWWWWWW                       WWWWWWWWWW                             WWWWWW',\n  'WWWWWWWWWWWW                       WWWWWWWWWW                            WWWWWWW',\n  'WWWWWWWWWWWW                      WWWWWWWWWWW                           WWWWWWWW',\n  'WWWWWWWWWWW                      WWWWWWWWWWWW                          WWWWWWWWW',\n  'WWWWWWWWWWW                     WWWWWWWWWWWWWW      C                 WWWWWWWWWW',\n  'WWWWWWWWWWW        C            WWWWWWWWWWWWWW                       WWWWWWWWWWW',\n  'WWWWWWWWWWW                    WWWWWWWWWWWWWWW                      WWWWWWWWWWWW',\n  'WWWWWWWWWWWW                   WWWWWWWWWWWWWWWW                   WWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWW                WWWWWWWWWWWWWWWWWWW                WWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWW              WWWWWWWWWWWWWWWWWWWWWW            WWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWW            WWWWWWWWWWWWWWWWWWWWWWWW        WWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWW          WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level3: LevelData = [\n  '                                         WW                      WWWWWWWWWWWWWWW',\n  '                                       WWWWW                      WWWWWWWWWWWWWW',\n  '                     WW                WWWWWW                        WWWWWWWWWWW',\n  '                   WWWWW                WWWWW                          WWWWWWWWW',\n  '                   WWWWW                                                WWWWWWWW',\n  '                    WWW                               WWWW               WWWWWWW',\n  '                               WW               C    WWWWWW               WWWWWW',\n  '                               WWWW                  WWWWW                WWWWWW',\n  '                               WWWW                 WWWWWW                WWWWWW',\n  '                               WWW                  WWWWWW                 WWWWW',\n  '                                           WWW        WWW                   WWWW',\n  '                                          WWWWW                             WWWW',\n  '                    WWW                  WWWWWW                              WWW',\n  '                    WW                   WWWWW                               WWW',\n  '                     W                    WWWW                               WWW',\n  '                                                                              WW',\n  '                                                                        G     WW',\n  '                               W                                               W',\n  '         S                    WWW                                              W',\n  '                             WWWW                                             WW',\n  '                             WWW                      WW        WW            WW',\n  '                             WWW                    WWWWW      WWWW           WW',\n  '                     WW                            WWWWWW     WWWWWWW        WWW',\n  '                    WWW                  WWW      WWWWWWW     WWWWWWW       WWWW',\n  '                    WWW                 WWWW      WWWWWWW     WWWWWWW       WWWW',\n  '                                       WWWWW      WWWWWWW     WWWWWWW        WWW',\n  '                                       WWWWW       WWWWWW     WWWWWWW        WWW',\n  '                                                    WWWW       WWWWW         WWW',\n  '                                                                WWWW         WWW',\n  '                                                                 WW          WWW',\n  '                                                                             WWW',\n  '                               WWW     C                                     WWW',\n  '                              WWWWW                                           WW',\n  '                              WWWWW         WWWW                              WW',\n  '                     WW        WWWW        WWWWWW           WWW       C       WW',\n  '                     W                    WWWWWWWW         WWWWWW            WWW',\n  '                                          WWWWWWWW       WWWWWWWWW          WWWW',\n  '                                          WWWWWWW        WWWWWWWWWW        WWWWW',\n  '                                          WWWWWW        WWWWWWWWWWW       WWWWWW',\n  '                                          WWWWW         WWWWWWWWWWWW   WWWWWWWWW',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level4: LevelData = [\n  '                                                                                ',\n  '                                                W                               ',\n  '                                              WWWW         C         WW         ',\n  '                                               WWWW                 WWW   W     ',\n  '                      WW                       WWWWW             WW WWW  WW     ',\n  '                       WW                    WWWWWWWW            WWWWWWWWWW     ',\n  '                        WWWWW               WWWWWWWWWWW           WWWWWWWWW    W',\n  '                    WWWWWWWWWWWW           WWWWWWWWWWWW           WWWWWWWW     W',\n  '                     WWWWWWWWWWW            WWWWWWWWWW             WWWWW      WW',\n  '                      WWWWW                      WWWW               WW       WWW',\n  '                                                                     W       WWW',\n  '                                                                              W ',\n  '                                                           WW                   ',\n  '                                                            WWW                 ',\n  '    S                                                        WWWW               ',\n  '                                                          WWWWWWW               ',\n  '                                             WWWW         WWWWWWW               ',\n  '                                       WWWWWWWWWWW         WWWWWW        G      ',\n  '                                       WW WWWWWWWW        WWWWWWW               ',\n  '                                         WWWWWWWWW       WWWWWWW                ',\n  '                                       WWWWWWWWWW       WW   WW                 ',\n  '                    WWWWWWW           WW   WWWWW             W                  ',\n  '                     WWWWWWWWW            WWWWW                                 ',\n  '                         WWWW             W                                   WW',\n  '                       WWWWW             WW                                   WW',\n  '                      WW                                          WWWWW        W',\n  '                                                                 WWWWWWW       W',\n  '                                                                WWWWWWWW       W',\n  '                                                  WW            WWWWWWWW   WW   ',\n  '                                                 WWWWW         WWWWWWWWW   WW   ',\n  '                                   C           WWWWWWWW       WWW WWW W    WWW  ',\n  '                                             WWWWWWWWW       WWW  WWW      WWWW ',\n  '                                          WWWWWWWWWW         WW  WWW       WWWWW',\n  '                           WW            WWWWWWWWWW          W   WWW       WWW W',\n  '                        WWWWW              WWWWWWW               WW        W    ',\n  '                    WWWWWWW                W   WW                               ',\n  '                WWWWWWWWWW                    WW         C                      ',\n  '                WWWWWWWW                     WW                                 ',\n  '                                             W                                  ',\n  '                                                                                ',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level5: LevelData = [\n  '                             W          WWWWWWWWWWWWWWW       WWWWWWWWWWWWWWWWWW',\n  '                             W         WWWWWWWWWWWWWWWWW             WWWWWWWWWWW',\n  '                            WW         WWWWWWWWWWWWWWWWWW               WWWWWWWW',\n  '                            WW          WWWWWWWWWWWWWWWWW                 WWWWWW',\n  '                           WWW          WWWWWWWWWWWWWWWWW                   WWWW',\n  '     S                     WWW           WWWWWWWWWWWWWWWW                    WWW',\n  '                          WWWW            WWWWWWWWWWWWWW                      WW',\n  '                         WWWW             WWWWWWWWWWWWWW                       W',\n  '                        WWWWW              WWWWWWWWWWWW                         ',\n  '                       WWWWWW  C            WWWWWWWWWW                          ',\n  '                      WWWWWWW                 WWWWWWW                           ',\n  '                      WWWWWWWW   W                                              ',\n  '                      WWWWWWWWWWWW                                              ',\n  '                      WWWWWWWWWWW                                               ',\n  '                      WWWWWWWWW                                                 ',\n  '                W     WWWWWWWW                                                  ',\n  '                WW    WWWWWWWW               WWWW                               ',\n  '                WW    WWWWWWW              WWWWW                 W              ',\n  '                WW     WWWWWW             WWWWW                 WW              ',\n  '                WW     WWWWW             WWWWW                 WW               ',\n  '                WWW    WWWWW             WWWWW                WWW               ',\n  '                WWW    WWWWW  C          WWWWW               WWWW       G       ',\n  '                WWW     WWWW            WWWWWW     C         WWWW               ',\n  '               WWWW     WWWW            WWWWWW               WWWW               ',\n  '               WWWW     WWWW           WWWWWWWW              WWWW               ',\n  '               WWWW      WWWW          WWWWWWWWW             WWWW              W',\n  '              WWWWW      WWWW          WWWWWWWWWW            WWWWW            WW',\n  '              WWWWW       WWWW         WWWWWWWWWWW      W    WWWWWW           WW',\n  '             WWWWW         WWW         WWWWWWWWWWWW    WW     WWWWWW         WWW',\n  '             WWWWW          WW        WWWWWWWWWWWWWWWWWWWW    WWWWWWWWW  WWWWWWW',\n  '             WWWW            W        WWWWWWWWWWWWWWWWWWWW    WWWWWWWWWWWWWWWWWW',\n  '             WWWW                     WWWWWWWWWWWWWWWWWWWW    WWWWWWWWWWWWWWWWWW',\n  '            WWWWW                    WWWWWWWWWWWWWWWWWWWWW     WWWWWWWWWWWWWWWW ',\n  '            WWWWW                    WWWWWWWWWWWWWWWWWWWWW      WWWWWWWWWWWWWWW ',\n  '           WWWWWW                   WWWWWWWWWWWWWWWWWWWWWW       WWWWWWWWWWWWWW ',\n  '          WWWWWW       W           WWWWWWWWWWWWWWWWWWWWWWW        WWWWWWWWWWW   ',\n  '          WWWWWW       WW         WWWWWWWWWWWWWWWWWWWWWWWW         WWWWWWWW     ',\n  '         WWWWWWW       WWWW     WWWWWWWWWWWWWWWWWWWWWWWWWWW                     ',\n  '        WWWWWWWW      WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW                    ',\n  '        WWWWWWW       WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW                    ',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level6: LevelData = [\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWW        WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWW          WWWW             WWWWWWWW    WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWW                             WWWW        WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWW                                       C  WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWW                                          WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWW      S                                   WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWW             WWWWWWWWW            WWWWW   WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWW           WWWWWWWWWWWW      WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWW           WWWWWWWWWWWW      WWWWWWWWWWWWWWWWWWWWWWWWWW     WWWWWWWWWWWWWW',\n  'WWWWWWWWW        WWWWWWWWWWWW     WWWWWWWWWWWWWWWWWWWWWWWWW        WWWWWWWWWWWWW',\n  'WWWWWWWWWWWWW   WWWWWWWWWWW       WWWWWWWWWWWWWWWWWWWWWW            WWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWW       WWWWWWWWWWWWWWWWWWWWW              WWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWW        WWWWWWWWWWWWWWWWWWW                WWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWW          WWWWWWWWWWWWWWWW                  WWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWW            WWWWWWWWWWWW                     WWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWW      WW      WWWWWWWWW                 G     WWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWW      WWWW      WWWWWW                         WWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWW      WWWWWWW     WWW        WWWWWWWW          WWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWW      WWWWWWWW             WWWWWWWWWWW        WWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWW   C  WWWWWWWWW           WWWWWWWWWWWW       WWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWW      WWWWWWWWWW         WWWWWWWWWWWWWWW    WWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWW      WWWWWWWWWW        WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWW  WWWWWWWWWWWWW       WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW        WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW    C   WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW       WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW      WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW    WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level7: LevelData = [\n  '                            WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  '                            WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  '                            WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW  ',\n  '                            WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW   ',\n  '                            WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW    ',\n  '                            WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW     ',\n  '   S                        WWWWWWWWWWWWWWWWWWWWWWWW   WWWWWWWWWWWWWWWWWWW      ',\n  '                            WWWWWWWWWWWWWWWWWWWWWWW     WWWWWWWWWWWWWWWWW       ',\n  '                            WWWWWWWWWWWWWWWWWWWWWW       WWWWWWWWWWWWWWW        ',\n  '                            WWWWWWWWWWWWWWWWWWWWW    C    WWWWWWWWWWWWW         ',\n  '                            WWWWWWWWWWWWWWWWWWWW           WWWWWWWWWWW          ',\n  '                            WWWWWWWWWWWWWWWWWWW             WWWWWWWWW           ',\n  '                            WWWWWWWWWWWWWWWWWW      WW       WWWWWWW      G     ',\n  '                            WWWWWWWWWWWWWWWWW      WWWW       WWWWW             ',\n  '                 WWWWWW      WWWWWWWWWWWWWWW      WWWWWW       WWW              ',\n  '                WWWWWWWW                         WWWWWWWW       W               ',\n  '               WWWWWWWWW                        WWWWWWWWWW                      ',\n  '              WWWWWWWWW                        WWWWWWWWWWWW                     ',\n  '             WWWWWWWWW                        WWWWWWWWWWWWWW                    ',\n  '             WWWWWWWW    WWW                 WWWWWWWWWWWWWWWW                   ',\n  '             WWWWWWW    WWWWW                WWWWWWWWWWWWWWWW                   ',\n  '             WWWWWW    WWWWWWW                WWWWWWWWWWWWWW                    ',\n  '             WWWWW    WWWWWWWWW                WWWWWWWWWWWW                     ',\n  '            WWWWW    WWWWWWWWWWW      WWW       WWWWWWWWWW      WWWW            ',\n  '           WWWWWW    WWWWWWWWWWW     WWWWW       WWWWWWWW      WWWWWW           ',\n  'WWWWWWWWWWWWWWWWW    WWWWWWWWWWW    WWWWWWW       WWWWWW      WWWWWWWW          ',\n  'WWWWWWWWWWWWWWWWWW    WWWWWWWWW    WWWWWWWWW       WWWW      WWWWWWWWWW         ',\n  'WWWWWWWWWWWWWWWWWWW    WWWWWWW    WWWWWWWWWWW       WW      WWWWWWWWWWWW        ',\n  'WWWWWWWWWWWWWWWWWWWW    WWWWW    WWWWWWWWWWWWW             WWWWWWWWWWWWWW       ',\n  'WWWWWWWWWWWWWWWWWWWWW    WWW    WWWWWWWWWWWWWWW           WWWWWWWWWWWWWWWW      ',\n  'WWWWWWWWWWWWWWWWWWWWWW         WWWWWWWWWWWWWWWWW    C    WWWWWWWWWWWWWWWWWW     ',\n  'WWWWWWWWWWWWWWWWWWWWWWW   C   WWWWWWWWWWWWWWWWWWW       WWWWWWWWWWWWWWWWWWWW    ',\n  'WWWWWWWWWWWWWWWWWWWWWWWW     WWWWWWWWWWWWWWWWWWWWW     WWWWWWWWWWWWWWWWWWWWWW   ',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW   WWWWWWWWWWWWWWWWWWWWWWWW  ',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW ',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n  'WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW',\n];\n","import { LevelData } from './levelData.type';\n\nexport const level8: LevelData = [\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    S    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    C    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    C    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    C    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    C    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    C    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '    C    C    C    C    C    C    C    C    C    C    C    C    C    C    C     ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n  '                                                                                ',\n];\n","import React, { MutableRefObject } from 'react';\nimport { Sphere } from '@react-three/drei';\nimport { Color, Mesh } from 'three';\n\ninterface BallProps {\n  ball: MutableRefObject<Mesh>\n}\n\nexport const Ball: React.FC<BallProps> = ({ ball }: BallProps) => (\n  <Sphere\n    ref={ball}\n    args={[0.5, 20, 10]}\n    visible\n  >\n    <meshStandardMaterial\n      attach=\"material\"\n      color=\"green\"\n      roughness={0}\n      emissive={new Color('#ff0000')}\n      emissiveIntensity={1}\n      metalness={1}\n      opacity={1}\n      transparent\n    />\n  </Sphere>\n);\n","import React, { useMemo, useRef } from 'react';\nimport { MeshProps } from '@react-three/fiber';\nimport { Mesh, Shape, Vector2 } from 'three';\nimport { Extrude } from '@react-three/drei';\n\ninterface PrismProps extends MeshProps{\n  vertices: [number, number][];\n}\n\nexport const Prism: React.FC<PrismProps> = ({ vertices, children, rotation }: PrismProps) => {\n  const terrain = useRef<Mesh>(null!);\n\n  const shape = useMemo(() => new Shape(vertices.map(([x, y]) => new Vector2(x, y))), [vertices]);\n\n  return (\n    <Extrude\n      rotation={rotation}\n      ref={terrain}\n      visible\n      args={[shape, { steps: 1, depth: 1, bevelEnabled: false }]}\n    >\n      {children}\n    </Extrude>\n  );\n};\n","// maps wall code to geometry\n\n// maps wall code to representing shape vertices\nimport { WallCode } from './wallCode.type';\n\nexport const geometryMapping: { [key in WallCode]: [number, number][] } = {\n  '0000': [],\n  1000: [[0, 0], [0.5, 0], [0, 0.5]],\n  '0100': [[0.5, 0], [1, 0], [1, 0.5]],\n  '0001': [[1, 0.5], [1, 1], [0.5, 1]],\n  '0010': [[0, 0.5], [0.5, 1], [0, 1]],\n  1100: [[0, 0], [1, 0], [1, 0.5], [0, 0.5]],\n  '0101': [[0.5, 0], [1, 0], [1, 1], [0.5, 1]],\n  '0011': [[0, 0.5], [1, 0.5], [1, 1], [0, 1]],\n  1010: [[0, 0], [0.5, 0], [0.5, 1], [0, 1]],\n  '0110': [[0.5, 0], [1, 0], [1, 0.5], [0.5, 1], [0, 1], [0, 0.5]],\n  1001: [[0, 0], [0.5, 0], [1, 0.5], [1, 1], [0.5, 1], [0, 0.5]],\n  '0111': [[0.5, 0], [1, 0], [1, 1], [0, 1], [0, 0.5]],\n  1011: [[0, 0], [0.5, 0], [1, 0.5], [1, 1], [0, 1]],\n  1110: [[0, 0], [1, 0], [1, 0.5], [0.5, 1], [0, 1]],\n  1101: [[0, 0], [1, 0], [1, 1], [0.5, 1], [0, 0.5]],\n  1111: [[0, 0], [1, 0], [1, 1], [0, 1]],\n};\n","import React from 'react';\nimport { Vector3 } from '@react-three/fiber';\nimport { Prism } from './Prism';\nimport { geometryMapping } from '../utils/geometryMapping';\nimport { WallCode } from '../utils/wallCode.type';\n\ninterface WallProps {\n  position: Vector3;\n  type: WallCode;\n}\n\nexport const Wall: React.FC<WallProps> = ({ position, type }: WallProps) => (type === '0000'\n  ? null\n  : (\n    <group position={position}>\n      <Prism\n        rotation={[Math.PI / 2, 0, 0]}\n        visible\n        vertices={geometryMapping[type]}\n        position={[-0.5, 0.5, -0.5]}\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"white\"\n          roughness={0.5}\n          metalness={0.7}\n          opacity={1}\n        />\n      </Prism>\n    </group>\n  ));\n","import React, { useMemo } from 'react';\nimport { Wall } from './Wall';\nimport { getSquareMap } from '../utils/getSquareMap';\n\ninterface WallMapProps {\n  wallMap: (1 | 0)[][];\n}\n\nexport const WallMap: React.FC<WallMapProps> = ({ wallMap }: WallMapProps) => {\n  const walls = useMemo(() => getSquareMap(wallMap)\n    .flatMap((row, x) => row\n      .map((type, y) => (<Wall position={[y, 0, x]} type={type} />))), [wallMap]);\n\n  return (\n    <group>\n      {walls}\n    </group>\n  );\n};\n","import { WallCode } from './wallCode.type';\n\nexport const getSquareMap = (map: (1 | 0)[][]) => {\n  const newMap: WallCode[][] = [];\n\n  for (let y = 0; y < map.length - 1; y += 1) {\n    const newRow: WallCode[] = [];\n    for (let x = 0; x < map[0].length - 1; x += 1) {\n      newRow.push(`${map[y][x]}${map[y][x + 1]}${map[y + 1][x]}${map[y + 1][x + 1]}`);\n    }\n    newMap.push(newRow);\n  }\n\n  return newMap;\n};\n","import { Plane } from '@react-three/drei';\nimport React from 'react';\nimport { ThreeEvent } from '@react-three/fiber';\n\ninterface LevelProps {\n  size: [number, number],\n  onPointerDown: (event: ThreeEvent<PointerEvent>) => void\n  onPointerMove: (event: ThreeEvent<PointerEvent>) => void\n  onPointerUp: (event: ThreeEvent<PointerEvent>) => void\n  onPointerLeave: (event: ThreeEvent<PointerEvent>) => void\n}\n\nexport const EventPlane: React.FC<LevelProps> = ({\n  size: [width, height],\n  onPointerDown,\n  onPointerMove,\n  onPointerUp,\n  onPointerLeave,\n}: LevelProps) => (\n  <Plane\n    rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n    args={[height - 1, width - 1, height, width]}\n    position={[-0.5, 0.01, -0.5]}\n    visible={false}\n    onPointerDown={onPointerDown}\n    onPointerMove={onPointerMove}\n    onPointerUp={onPointerUp}\n    onPointerLeave={onPointerLeave}\n  >\n    <meshStandardMaterial\n      attach=\"material\"\n      roughness={1}\n      metalness={0}\n      opacity={0}\n      transparent\n      wireframe\n    />\n  </Plane>\n);\n","import React, { MutableRefObject } from 'react';\nimport { Cone } from '@react-three/drei';\nimport { Color, Mesh } from 'three';\n\ninterface PinProps {\n  state: 'active' | 'valid' | 'invalid',\n  pin: MutableRefObject<Mesh>\n}\n\nexport const Pin: React.FC<PinProps> = ({ state, pin }: PinProps) => (\n  <group ref={pin}>\n    <Cone\n      args={[0.5, 1, 7]}\n      visible\n    >\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"green\"\n        roughness={0}\n        emissive={new Color(state === 'invalid' ? '#ff0000' : '#0000ff')}\n        emissiveIntensity={state === 'active' ? 5 : 0.2}\n        metalness={1}\n        opacity={1}\n        transparent\n      />\n    </Cone>\n  </group>\n);\n","import React, { MutableRefObject, useRef } from 'react';\nimport { ArrowHelper, Mesh, Vector3 } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\ninterface MagnetLinkProps {\n  ball: MutableRefObject<Mesh>,\n  pin: MutableRefObject<Mesh>,\n  active: boolean,\n}\n\nexport const MagnetLink: React.FC<MagnetLinkProps> = (\n  {\n    ball,\n    pin,\n    active = false,\n  }: MagnetLinkProps,\n) => {\n  const line = useRef<Mesh>(null!);\n\n  useFrame(() => {\n    const from = ball.current.position;\n    const to = pin.current.position;\n\n    const direction = new Vector3().subVectors(from, to);\n    const arrow = new ArrowHelper(direction.clone().normalize(), from);\n    const length = direction.length();\n\n    line.current.position.set(...to.clone().add(from).divideScalar(2).toArray());\n    line.current.scale.set(1, length, 1);\n    line.current.rotation.setFromQuaternion(arrow.quaternion);\n  });\n\n  return (\n    <mesh visible={active} ref={line} position={[0, 0, 0]}>\n      <cylinderGeometry attach=\"geometry\" args={[0.1, 0.1, 1, 10]} />\n      <meshStandardMaterial color=\"red\" attach=\"material\" />\n    </mesh>\n  );\n};\n","import { Vector3 } from 'three';\nimport { LevelData } from '../data/levels';\nimport { addLevelBorders } from './addLevelBorders';\n\nexport const parseLevel = (level: LevelData) => {\n  const borderedLevel = addLevelBorders(level);\n  const start = new Vector3(0, 0, 0);\n  const collectibles: Vector3[] = [];\n  const goal = new Vector3(0, 0, 0);\n  const height = borderedLevel.length;\n  const width = borderedLevel[0].length;\n  const offset = new Vector3(-width / 2, 0, -height / 2);\n\n  const tileMap = borderedLevel\n    .map((row, y) => row\n      .split('')\n      .map((type, x) => ({\n        type,\n        x,\n        y,\n      })));\n\n  tileMap.forEach((row) => row.forEach(({ type, x, y }) => {\n    switch (type) {\n      case 'S':\n        start.set(x, 0, y);\n        break;\n      case 'G':\n        goal.set(x, 0, y);\n        break;\n      case 'C':\n        collectibles.push(new Vector3(x, 0, y));\n        break;\n      default:\n        break;\n    }\n  }));\n\n  const wallMap: (1 | 0)[][] = tileMap\n    .map((row) => row\n      .map(({ type }) => (type === 'W' ? 1 : 0)));\n\n  return {\n    levelCollectibles: collectibles,\n    start,\n    goal,\n    wallMap,\n    height,\n    width,\n    offset,\n  };\n};\n","import { LevelData } from '../data/levels';\n\nexport const addLevelBorders: (level: LevelData) => string[] = (level: LevelData) => [\n  `W${[...level[0].split('')].map(() => 'W').join('')}W`,\n  ...level.map((row) => `W${row}W`),\n  `W${[...level[0].split('')].map(() => 'W').join('')}W`,\n];\n","import React, { useRef } from 'react';\nimport { Icosahedron } from '@react-three/drei';\nimport { Color, Mesh, Vector3 } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\ninterface GoalProps {\n  position: Vector3,\n}\n\nexport const Goal: React.FC<GoalProps> = ({ position }: GoalProps) => {\n  const ref = useRef<Mesh>(null!);\n\n  useFrame(({ clock }) => {\n    ref.current.rotateX(0.01);\n    ref.current.position.setY(Math.sin(clock.elapsedTime * 2));\n  });\n\n  return (\n    <Icosahedron\n      ref={ref}\n      args={[0.5]}\n      position={position}\n      visible\n    >\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"green\"\n        roughness={0}\n        emissive={new Color('#00ffff')}\n        emissiveIntensity={0.3}\n        metalness={1}\n        opacity={1}\n        transparent\n      />\n    </Icosahedron>\n  );\n};\n","import React, { useRef } from 'react';\nimport { Cylinder } from '@react-three/drei';\nimport { Color, Mesh, Vector3 } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\ninterface CollectibleProps {\n  position: Vector3,\n}\n\nexport const Collectible: React.FC<CollectibleProps> = ({ position }: CollectibleProps) => {\n  const ref = useRef<Mesh>(null!);\n\n  useFrame(() => {\n    ref.current.rotateX(0.03);\n  });\n\n  return (\n    <Cylinder\n      ref={ref}\n      rotation={[0, 0, Math.PI / 2]}\n      args={[0.6, 0.6, 0.3, 20]}\n      position={position}\n      visible\n    >\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"yellow\"\n        roughness={0.4}\n        emissive={new Color('#ffff00')}\n        emissiveIntensity={0.2}\n        metalness={1}\n        opacity={1}\n        transparent\n      />\n    </Cylinder>\n  );\n};\n","import React, {\n  useCallback, useEffect, useMemo, useRef, useState,\n} from 'react';\nimport { Mesh, Vector3 } from 'three';\nimport { ThreeEvent, useFrame } from '@react-three/fiber';\nimport { levels } from '../data/levels';\nimport { Ball } from './Ball';\nimport { WallMap } from './WallMap';\nimport { EventPlane } from './EventPlane';\nimport { Pin } from './Pin';\nimport { MagnetLink } from './MagnetLink';\nimport { parseLevel } from '../utils/parseLevel';\nimport { Goal } from './Goal';\nimport { Collectible } from './Collectible';\n\ninterface LevelProps {\n  levelIndex: number;\n  ballSpeed: number;\n  tractionForce: number;\n  advanceLevel: () => any;\n}\n\nexport const Level: React.FC<LevelProps> = (\n  {\n    levelIndex,\n    ballSpeed,\n    tractionForce,\n    advanceLevel,\n  }: LevelProps,\n) => {\n  const {\n    levelCollectibles,\n    start,\n    goal,\n    wallMap,\n    width,\n    height,\n    offset,\n  } = useMemo(() => parseLevel(levels[levelIndex]), [levelIndex]);\n\n  const [linkActive, setLinkActive] = useState(false);\n  const [collectibles, setCollectibles] = useState(levelCollectibles);\n  const velocity = useRef<Vector3>(new Vector3(ballSpeed, 0, 0));\n\n  const ball = useRef<Mesh>(null!);\n  const pin = useRef<Mesh>(null!);\n\n  const init = useCallback(() => {\n    ball.current.position.set(...start.clone().add(offset).toArray());\n    velocity.current.set(ballSpeed, 0, 0);\n    setCollectibles(levelCollectibles);\n  }, [start, levelCollectibles, offset, ballSpeed]);\n\n  useEffect(() => init(), [levelIndex]);\n\n  useFrame((state, delta) => {\n    const ballPosition = ball.current.position;\n    const pinPosition = pin.current.position;\n\n    ballPosition.addScaledVector(velocity.current, delta);\n    const direction = pinPosition.clone().sub(ballPosition);\n\n    if (linkActive && direction.angleTo(velocity.current) > Math.PI / 2) {\n      velocity.current.add(direction.setLength(tractionForce * delta)).setLength(ballSpeed);\n    }\n\n    const [x,, z] = ball.current.position.clone().sub(offset).toArray().map(Math.round);\n\n    if (wallMap[z][x]) {\n      init();\n    }\n\n    if (goal.x === x && goal.z === z) {\n      advanceLevel();\n    }\n\n    if (collectibles.some(({ x: cx, z: cz }) => x === cx && z === cz)) {\n      setCollectibles(collectibles.filter(({ x: cx, z: cz }) => !(x === cx && z === cz)));\n    }\n  });\n\n  useEffect(() => init(), []);\n\n  const movePin = useCallback((event: ThreeEvent<PointerEvent>) => {\n    pin.current.position.set(...event.point.setY(0).toArray());\n  }, []);\n\n  const activatePin = useCallback(() => {\n    setLinkActive(true);\n  }, []);\n\n  const deactivatePin = useCallback(() => {\n    setLinkActive(false);\n  }, []);\n\n  return (\n    <group>\n      <EventPlane\n        size={[width, height]}\n        onPointerMove={movePin}\n        onPointerDown={activatePin}\n        onPointerUp={deactivatePin}\n        onPointerLeave={deactivatePin}\n      />\n      <Ball ball={ball} />\n      <Pin pin={pin} state={linkActive ? 'active' : 'valid'} />\n      <MagnetLink ball={ball} pin={pin} active={linkActive} />\n      <group position={offset}>\n        <WallMap wallMap={wallMap} />\n        <Goal position={goal} />\n        { collectibles.map((collectible) => <Collectible position={collectible} />)}\n      </group>\n    </group>\n  );\n};\n","export const levelColors: [string, string, string][] = [\n  ['blue', 'red', 'purple'],\n  ['darkblue', 'darkcyan', 'darkslateblue'],\n  ['midnightblue', 'maroon', 'darkviolet'],\n  ['orangered', 'darkslategray', 'goldenrod'],\n  ['indigo', 'red', 'darkblue'],\n  ['maroon', 'red', 'darkslategray'],\n  ['white', 'orange', 'dimgray'],\n  ['orangered', 'darkslategray', 'goldenrod'],\n];\n","import React, { Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { MapControls, PerspectiveCamera, Stats } from '@react-three/drei';\nimport { useControls } from 'leva';\nimport { NeonScene } from '../components/NeonScene';\nimport { Level } from '../components/Level';\nimport { levelColors } from '../data/levels/levelColors';\n\nexport const Game: React.FC = () => {\n  const [{\n    x,\n    y,\n    z,\n    level,\n    ballSpeed,\n    tractionForce,\n  }, set] = useControls(() => ({\n    x: 0,\n    y: 70,\n    z: 10,\n    level: {\n      value: 0, min: 0, max: 7, step: 1,\n    },\n    ballSpeed: {\n      value: 10, min: 1, max: 100, step: 0.5,\n    },\n    tractionForce: {\n      value: 30, min: 10, max: 200, step: 10,\n    },\n  }), { visible: false });\n\n  return (\n    <Canvas\n      onCreated={({ gl }) => {\n        gl.setClearColor('#000000');\n      }}\n    >\n      <Stats />\n      <PerspectiveCamera makeDefault position={[x, y, z]} />\n      <MapControls enabled={false} />\n      <Suspense fallback={null}>\n        <NeonScene colorScheme={levelColors[level % levelColors.length]}>\n          <Level\n            advanceLevel={() => set({ level: level + 1 })}\n            ballSpeed={ballSpeed}\n            tractionForce={tractionForce}\n            levelIndex={level}\n          />\n        </NeonScene>\n      </Suspense>\n    </Canvas>\n  );\n};\n","import React from 'react';\nimport { Game } from './core/Game';\n\nexport const App = () => (\n  <div\n    style={{\n      height: '100vh',\n      width: '100vw',\n    }}\n  >\n    <Game />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { reportWebVitals } from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}